version: '3'
services:
  reskue-db:
    container_name: reskue-db
    restart: always
    image: reskue-database:latest
    build:
      context: ./reskue-db
      dockerfile: ./reskue.db.dockerfile
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_DB: ${RESKUE_DB}
    volumes:
      - ./reskue-db/data/:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT}
    ports:
      - ${RESKUE_DB_PORT}:${POSTGRES_PORT}
    networks:
      - reskue-network
  auth-db:
    container_name: auth-db
    restart: always
    image: auth-db:latest
    build:
      context: ./auth-db
      dockerfile: ./auth.db.dockerfile
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_DB: ${AUTH_DB}
    volumes:
      - ./auth-db/data/:/var/lib/postgresql/data
    expose: 
      - ${POSTGRES_PORT}
    ports:
      - ${AUTH_DB_PORT}:${POSTGRES_PORT}
    networks: 
      - reskue-network
  keycloak:
    container_name: reskue-keycloak
    restart: always
    depends_on: 
      - auth-db
    image: jboss/keycloak:latest
    environment: 
      DB_VENDOR: ${DB_VENDOR}
      DB_ADDR: auth-db
      DB_PORT: ${POSTGRES_PORT}
      DB_DATABASE: ${AUTH_DB}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: ./tmp/realm-export.json
    command: -Dkeycloak.profile.feature.upload_scripts=enabled
    expose: 
      - ${KEYCLOAK_INTERNAL_PORT}
    ports: 
      - ${KEYCLOAK_PORT}:${KEYCLOAK_INTERNAL_PORT}
    volumes: 
      - ./keycloak/realms/realm-export.json:/tmp/realm-export.json
    networks: 
      - reskue-network
  rabbitmq:
    container_name: reskue-rabbitmq
    restart: always
    image: rabbitmq:3-management-alpine
    expose: 
      - ${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
    volumes:
      - ./rabbitmq/etc/:/etc/rabbitmq/
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/logs/:/var/log/rabbitmq/
    networks: 
      - reskue-network
  location-db:
    container_name: location-db
    restart: always
    image: location-database:latest
    build:
      context: ./location-db
      dockerfile: ./location.db.dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_DB: ${LOCATION_DB}
    volumes:
      - ./location-db/data/:/var/lib/postgresql/data
    expose: 
      - ${POSTGRES_PORT}
    ports:
      - ${LOCATION_DB_PORT}:${POSTGRES_PORT}
    networks: 
      - reskue-network
  location-api:
    image: fraunhoferiosb/frost-server:latest
    container_name: location-api
    restart: always
    depends_on: 
      - location-db
    environment:
      serviceRootUrl: http://localhost:${LOCATION_API_PORT}/FROST-Server
      http_cors_enable: 'true'
      http_cors_allowed.origins: '*'
      persistence_db_driver: org.postgresql.Driver
      persistence_db_url: jdbc:postgresql://location-db:${POSTGRES_PORT}/${LOCATION_DB}
      persistence_db_username: ${POSTGRES_USER}
      persistence_db_password: ${POSTGRES_PASSWORD}
      persistence_autoUpdateDatabase: 'true'
    expose:
      - ${LOCATION_API_INTERNAL_PORT}
      - ${LOCATION_API_MQTT_INTERNAL_PORT}
    ports:
      - ${LOCATION_API_PORT}:${LOCATION_API_INTERNAL_PORT}
      - ${LOCATION_API_MQTT_PORT}:${LOCATION_API_MQTT_INTERNAL_PORT}
    networks: 
      - reskue-network
networks:
  reskue-network:
