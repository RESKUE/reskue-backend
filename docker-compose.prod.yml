version: "3"
services:
  content-db:
    container_name: content-db
    restart: always
    image: content-db:latest
    build:
      context: ./services/content-db
      dockerfile: ./content.db.dockerfile
    environment:
      POSTGRES_USER: ${CONTENT_DB_USER}
      POSTGRES_PASSWORD: ${CONTENT_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_DB: ${CONTENT_DB}
    volumes:
      - ./services/content-db/data/:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - ${CONTENT_DB_PORT}:5432
    networks:
      - reskue-network
  auth-db:
    container_name: auth-db
    restart: always
    image: auth-db:latest
    build:
      context: ./services/auth-db
      dockerfile: ./auth.db.dockerfile
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_DB: ${AUTH_DB}
    volumes:
      - ./services/auth-db/data/:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - ${AUTH_DB_PORT}:5432
    networks:
      - reskue-network
  location-db:
    container_name: location-db
    restart: always
    image: location-db:latest
    build:
      context: ./services/location-db
      dockerfile: ./location.db.dockerfile
    environment:
      POSTGRES_USER: ${LOCATION_DB_USER}
      POSTGRES_PASSWORD: ${LOCATION_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_DB: ${LOCATION_DB}
    volumes:
      - ./services/location-db/data/:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - ${LOCATION_DB_PORT}:5432
    networks:
      - reskue-network
  keycloak:
    container_name: keycloak
    restart: always
    depends_on:
      - auth-db
    image: jboss/keycloak:latest
    environment:
      DB_VENDOR: ${DB_VENDOR}
      DB_ADDR: auth-db
      DB_PORT: 5432
      DB_DATABASE: ${AUTH_DB}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${AUTH_DB_USER}
      DB_PASSWORD: ${AUTH_DB_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: ./tmp/realm-export.json
      KEYCLOAK_FRONTEND_URL: http://localhost:${KEYCLOAK_PORT}/auth/
    command: -Dkeycloak.profile.feature.upload_scripts=enabled
    expose:
      - 8080
    ports:
      - ${KEYCLOAK_PORT}:8080
    volumes:
      - ./services/keycloak/realms/realm-export.json:/tmp/realm-export.json
    networks:
      - reskue-network
  rabbitmq:
    container_name: rabbitmq
    restart: always
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    expose:
      - 5672
      - 15672
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_MANAGEMENT_PORT}:15672
    volumes:
      - ./services/rabbitmq/etc/:/etc/rabbitmq/
      - ./services/rabbitmq/data/:/var/lib/rabbitmq/
      - ./services/rabbitmq/logs/:/var/log/rabbitmq/
    networks:
      - reskue-network
  frost:
    image: fraunhoferiosb/frost-server:latest
    container_name: frost
    restart: always
    depends_on:
      - location-db
    environment:
      serviceRootUrl: http://localhost:${LOCATION_PORT}/FROST-Server
      http_cors_enable: "true"
      http_cors_allowed.origins: "*"
      persistence_db_driver: org.postgresql.Driver
      persistence_db_url: jdbc:postgresql://location-db:5432/${LOCATION_DB}
      persistence_db_username: ${LOCATION_DB_USER}
      persistence_db_password: ${LOCATION_DB_PASSWORD}
      persistence_autoUpdateDatabase: "true"
    expose:
      - 8080
      - 1883
    ports:
      - ${LOCATION_PORT}:8080
      - ${LOCATION_MQTT_PORT}:1883
    networks:
      - reskue-network
  spring:
    image: gitlab-ext.iosb.fraunhofer.de:4567/ilt-pse/ws20_21-mobile-anwendung-zur-unterst-tzung-im-kulturg-terschutz/reskue-backend:latest
    container_name: spring
    restart: always
    depends_on:
      - content-db
      - keycloak
      - rabbitmq
      - frost
    environment: 
      SPRING_MAIN_BANNER_MODE: "off"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION: "true"
      SPRING_DATASOURCE_INITIALIZATION_MODE: ${SPRING_DATASOURCE_INITIALIZATION_MODE}
      SPRING_DATASOURCE_PLATFORM: ${SPRING_DATASOURCE_PLATFORM}
      SPRING_DATASOURCE_URL: jdbc:${SPRING_DATASOURCE_PLATFORM_JDBC}://content-db:5432/${CONTENT_DB}
      SPRING_DATASOURCE_USERNAME: ${CONTENT_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${CONTENT_DB_PASSWORD}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080/auth
      KEYCLOAK_SSL_REQUIRED: ${KEYCLOAK_SSL_REQUIRED}
      KEYCLOAK_RESOURCE: ${KEYCLOAK_RESOURCE}
      KEYCLOAK_USE_RESOURCE_ROLE_MAPPINGS: "true"
      KEYCLOAK_BEARER_ONLY: "true"
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      KUERES_MEDIA_DIR: ${KUERES_MEDIA_DIR}
      KUERES_NOMINATIM_URL: ${KUERES_NOMINATIM_URL}
      KUERES_FROST_URL: http://localhost:${LOCATION_PORT}/FROST-Server
      KEYCLOAK_WAIT_PORT: 5436
      RABBITMQ_WAIT_PORT: 15437
      LOCATION_WAIT_PORT: 8080
    expose:
      - 8080
    ports:
      - ${SPRING_PORT}:8080
    networks:
      - reskue-network
networks:
  reskue-network:
